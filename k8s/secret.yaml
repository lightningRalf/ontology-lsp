# Ontology-LSP Secrets Template
# Copy this file and update with actual values

apiVersion: v1
kind: Secret
metadata:
  name: ontology-lsp-secrets
  namespace: ontology-lsp
  labels:
    app.kubernetes.io/name: ontology-lsp
    app.kubernetes.io/component: secret
type: Opaque
stringData:
  # PostgreSQL credentials
  POSTGRES_USER: "ontology"
  POSTGRES_PASSWORD: "CHANGE_ME_SECURE_PASSWORD"
  POSTGRES_DB: "ontology_lsp"
  DATABASE_URL: "postgres://ontology:CHANGE_ME_SECURE_PASSWORD@postgres-service.ontology-lsp.svc.cluster.local:5432/ontology_lsp"
  
  # Redis credentials (if authentication enabled)
  REDIS_PASSWORD: "CHANGE_ME_REDIS_PASSWORD"
  REDIS_URL: "redis://:CHANGE_ME_REDIS_PASSWORD@redis-service.ontology-lsp.svc.cluster.local:6379"
  
  # JWT secret for API authentication
  JWT_SECRET: "CHANGE_ME_VERY_SECURE_JWT_SECRET_KEY_256_BITS"
  
  # OpenTelemetry authentication (if required)
  OTEL_EXPORTER_OTLP_HEADERS: "authorization=Bearer CHANGE_ME_OTEL_TOKEN"
  
  # External API keys (if needed)
  OPENAI_API_KEY: "CHANGE_ME_OPENAI_KEY"
  ANTHROPIC_API_KEY: "CHANGE_ME_ANTHROPIC_KEY"

---
# TLS Certificate Secret (for HTTPS ingress)
apiVersion: v1
kind: Secret
metadata:
  name: ontology-lsp-tls
  namespace: ontology-lsp
  labels:
    app.kubernetes.io/name: ontology-lsp
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # Generate with: kubectl create secret tls ontology-lsp-tls --cert=tls.crt --key=tls.key -n ontology-lsp --dry-run=client -o yaml
  tls.crt: LS0tLS1CRUdJTi... # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # Base64 encoded private key