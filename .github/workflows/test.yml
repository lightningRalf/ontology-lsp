name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-server:
    name: Test LSP Server
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Run tests
      run: npm test
    
    - name: Run linter
      run: npm run lint

  test-extension:
    name: Test VS Code Extension
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install server dependencies
      run: npm ci
    
    - name: Build server
      run: npm run build
    
    - name: Install extension dependencies
      working-directory: ./vscode-client
      run: npm ci
    
    - name: Compile extension
      working-directory: ./vscode-client
      run: npm run compile
    
    - name: Run extension tests
      working-directory: ./vscode-client
      run: xvfb-run -a npm test
      env:
        ONTOLOGY_TEST_MODE: true
    
    - name: Generate coverage report
      working-directory: ./vscode-client
      run: npm run test:coverage
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./vscode-client/coverage
        flags: vscode-extension
        name: vscode-extension-coverage

  integration-test:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd vscode-client && npm ci
    
    - name: Build all
      run: |
        npm run build
        cd vscode-client && npm run compile
    
    - name: Run integration tests (Linux)
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./vscode-client
      run: xvfb-run -a npm run test:integration
      env:
        ONTOLOGY_TEST_MODE: true
    
    - name: Run integration tests (Windows/Mac)
      if: matrix.os != 'ubuntu-latest'
      working-directory: ./vscode-client
      run: npm run test:integration
      env:
        ONTOLOGY_TEST_MODE: true

  package:
    name: Package Extension
    runs-on: ubuntu-latest
    needs: [test-server, test-extension]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd vscode-client && npm ci
    
    - name: Build all
      run: |
        npm run build
        cd vscode-client && npm run compile
    
    - name: Package extension
      working-directory: ./vscode-client
      run: |
        npm install -g @vscode/vsce
        vsce package
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v3
      with:
        name: ontology-lsp-extension
        path: vscode-client/*.vsix