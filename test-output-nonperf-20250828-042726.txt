bun test v1.2.20 (6ad208bc)

test/layer1-budget.test.ts:
Would save pipeline comprehensive_learning to database
Would save pipeline pattern_feedback_cycle to database
Would save pipeline daily_insights to database
Would setup cron job for pipeline daily_insights with schedule: 0 9 * * *
Would load additional pipelines from database
(pass) Layer 1 budget behavior > findDefinition returns under Layer 1 budget on typical query [594.92ms]

test/layer1-cancellation.test.ts:
(pass) AsyncEnhancedGrep cancellable operations > searchCancellable can be cancelled quickly [155.91ms]
(pass) AsyncEnhancedGrep cancellable operations > listFilesCancellable can be cancelled quickly [86.56ms]

test/error-handling.test.ts:
[INFO] Performance: test_operation completed in 1ms {
  operation: "test_operation",
  duration: 1,
  success: true,
  attempt: 1,
  component: "TestComponent",
}
(pass) Error Handler > should handle successful operations [0.96ms]
[ERROR] MCP-Server: retry_test failed {
  name: "Error",
  message: "Transient failure",
  stack: "Error: Transient failure\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:55:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:52:7)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:50:39)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:42:46)",
}
[INFO] MCP-Server: Retry attempt 2/4 for retry_test {
  context: {
    component: "TestComponent",
    operation: "retry_test",
    timestamp: 1756355247543,
  },
  attempt: 2,
}
[ERROR] MCP-Server: retry_test failed {
  name: "Error",
  message: "Transient failure",
  stack: "Error: Transient failure\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:55:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:52:7)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at processTicksAndRejections (native:7:39)",
}
[INFO] MCP-Server: Retry attempt 3/4 for retry_test {
  context: {
    component: "TestComponent",
    operation: "retry_test",
    timestamp: 1756355247543,
  },
  attempt: 3,
}
[INFO] Performance: retry_test completed in 0ms {
  operation: "retry_test",
  duration: 0,
  success: true,
  attempt: 3,
  component: "TestComponent",
}
(pass) Error Handler > should retry on transient failures [81.42ms]
[ERROR] MCP-Server: validation_test failed {
  name: "Error",
  message: "Missing required field: name",
  stack: "Error: Missing required field: name\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:80:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:78:21)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:76:26)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:66:49)",
}
[WARN] MCP-Server: Not retrying due to error type {
  error: "Missing required field: name",
  type: "Error",
}
[ERROR] MCP-Server: validation_test failed {
  name: "Error",
  message: "Missing required field: name",
  stack: "Error: Missing required field: name\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:80:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:78:21)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:76:26)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:66:49)",
}
(pass) Error Handler > should not retry on validation errors [0.84ms]
[ERROR] MCP-Server: backoff_test failed {
  name: "Error",
  message: "Always fail",
  stack: "Error: Always fail\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:108:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:107:21)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:105:26)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:90:48)",
}
[INFO] MCP-Server: Retry attempt 2/4 for backoff_test {
  context: {
    component: "TestComponent",
    operation: "backoff_test",
    timestamp: 1756355247660,
  },
  attempt: 2,
}
[ERROR] MCP-Server: backoff_test failed {
  name: "Error",
  message: "Always fail",
  stack: "Error: Always fail\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:108:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:107:21)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at processTicksAndRejections (native:7:39)",
}
[INFO] MCP-Server: Retry attempt 3/4 for backoff_test {
  context: {
    component: "TestComponent",
    operation: "backoff_test",
    timestamp: 1756355247660,
  },
  attempt: 3,
}
[ERROR] MCP-Server: backoff_test failed {
  name: "Error",
  message: "Always fail",
  stack: "Error: Always fail\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:108:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:107:21)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at processTicksAndRejections (native:7:39)",
}
[INFO] MCP-Server: Retry attempt 4/4 for backoff_test {
  context: {
    component: "TestComponent",
    operation: "backoff_test",
    timestamp: 1756355247660,
  },
  attempt: 4,
}
[ERROR] MCP-Server: backoff_test failed {
  name: "Error",
  message: "Always fail",
  stack: "Error: Always fail\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:108:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:107:21)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at processTicksAndRejections (native:7:39)",
}
[ERROR] MCP-Server: backoff_test failed {
  name: "Error",
  message: "Always fail",
  stack: "Error: Always fail\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:108:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:107:21)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at processTicksAndRejections (native:7:39)",
}
(pass) Error Handler > should implement exponential backoff [0.92ms]
[ERROR] MCP-Server: circuit_test failed {
  name: "Error",
  message: "Service failure",
  stack: "Error: Service failure\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:35)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:23)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:151:37)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:136:44)",
}
[ERROR] MCP-Server: circuit_test failed {
  name: "Error",
  message: "Service failure",
  stack: "Error: Service failure\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:35)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:23)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:151:37)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:136:44)",
}
[ERROR] MCP-Server: circuit_test failed {
  name: "Error",
  message: "Service failure",
  stack: "Error: Service failure\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:35)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:23)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:151:37)\n    at processTicksAndRejections (native:7:39)",
}
[WARN] MCP-Server: Circuit breaker opened for TestComponent:circuit_test {
  failures: 2,
  threshold: 2,
}
[ERROR] MCP-Server: circuit_test failed {
  name: "Error",
  message: "Service failure",
  stack: "Error: Service failure\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:35)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:153:23)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:151:37)\n    at processTicksAndRejections (native:7:39)",
}
[ERROR] MCP-Server: circuit_test failed {
  name: "Error",
  message: "Circuit breaker open for TestComponent:circuit_test",
  stack: "Error: Circuit breaker open for TestComponent:circuit_test\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:63:25)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:151:37)\n    at processTicksAndRejections (native:7:39)",
}
[ERROR] MCP-Server: circuit_test failed {
  name: "Error",
  message: "Circuit breaker open for TestComponent:circuit_test",
  stack: "Error: Circuit breaker open for TestComponent:circuit_test\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:63:25)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:162:35)\n    at processTicksAndRejections (native:7:39)",
}
(pass) Error Handler > should implement circuit breaker [0.58ms]
[ERROR] MCP-Server: validation failed {
  name: "Error",
  message: "Missing required field: required_field",
  stack: "Error: Missing required field: required_field\n    at validateRequest (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:194:21)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:180:20)\n    at toThrow (unknown)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:185:8)",
}
[ERROR] MCP-Server: validation failed {
  name: "Error",
  message: "Request must be an object",
  stack: "Error: Request must be an object\n    at validateRequest (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:189:19)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:189:20)\n    at toThrow (unknown)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:194:8)",
}
(pass) Error Handler > should validate request parameters [0.57ms]
(pass) Error Handler > should create proper MCP errors [0.06ms]
(pass) File Logger > should create log entries with proper format [0.07ms]
(pass) File Logger > should log errors with stack traces [0.13ms]
(pass) File Logger > should create child loggers [1.29ms]
[INFO] Connection: Connection connect {
  connectionCount: 1,
  metadata: undefined,
}
[INFO] Performance: connect completed in 105ms {
  operation: "connect",
  duration: 105,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
[INFO] Connection: Connection disconnect {
  totalUptime: 1,
  graceful: true,
}
[INFO] Performance: disconnect completed in 0ms {
  operation: "disconnect",
  duration: 0,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
(pass) Connection Manager > should track connection state [105.83ms]
[INFO] Connection: Connection connect {
  connectionCount: 1,
  metadata: undefined,
}
[INFO] Performance: connect completed in 133ms {
  operation: "connect",
  duration: 133,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
(pass) Connection Manager > should track connection metrics [133.41ms]
[INFO] Connection: Connection disconnect {
  totalUptime: 0,
  graceful: true,
}
[INFO] Performance: disconnect completed in 1ms {
  operation: "disconnect",
  duration: 1,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
[INFO] Connection: Connection connect {
  connectionCount: 1,
  metadata: undefined,
}
[INFO] Performance: connect completed in 114ms {
  operation: "connect",
  duration: 114,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
[INFO] Connection: Connection disconnect {
  totalUptime: 0,
  graceful: true,
}
[INFO] Performance: disconnect completed in 0ms {
  operation: "disconnect",
  duration: 0,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
(pass) Connection Manager > should handle connection events [115.03ms]
(pass) Connection Manager > should provide health check information [0.23ms]
[INFO] Performance: test_operation completed in 0ms {
  operation: "test_operation",
  duration: 0,
  success: true,
  attempt: 1,
  component: "TestComponent",
}
(pass) Utility Functions > withMcpErrorHandling should wrap operations [0.36ms]
(pass) Utility Functions > createValidationError should create proper error [0.11ms]
(pass) Utility Functions > createInternalError should create proper error [0.06ms]
[ERROR] MCP-Server: recovery_scenario failed {
  name: "Error",
  message: "Network timeout",
  stack: "Error: Network timeout\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:402:25)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:409:7)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:407:45)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:393:58)",
}
[INFO] MCP-Server: Retry attempt 2/4 for recovery_scenario {
  context: {
    component: "IntegrationTest",
    operation: "recovery_scenario",
    timestamp: 1756355248098,
  },
  attempt: 2,
}
[ERROR] MCP-Server: recovery_scenario failed {
  name: "Error",
  message: "Temporary failure",
  stack: "Error: Temporary failure\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:403:25)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:409:7)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at processTicksAndRejections (native:7:39)",
}
[INFO] MCP-Server: Retry attempt 3/4 for recovery_scenario {
  context: {
    component: "IntegrationTest",
    operation: "recovery_scenario",
    timestamp: 1756355248098,
  },
  attempt: 3,
}
[INFO] Performance: recovery_scenario completed in 0ms {
  operation: "recovery_scenario",
  duration: 0,
  success: true,
  attempt: 3,
  component: "IntegrationTest",
}
(pass) Integration Tests > should handle complete error recovery scenario [4107.35ms]
[INFO] Performance: timeout_test completed in 153ms {
  operation: "timeout_test",
  duration: 153,
  success: true,
  attempt: 1,
  component: "IntegrationTest",
}
(pass) Integration Tests > should handle timeout scenarios [153.68ms]
[INFO] Connection: Connection connect {
  connectionCount: 1,
  metadata: undefined,
}
[INFO] Performance: connect completed in 110ms {
  operation: "connect",
  duration: 110,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
[ERROR] MCP-Server: Connection lost {
  name: "Error",
  message: "Connection lost",
  stack: "Error: Connection lost\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/test/error-handling.test.ts:453:33)\n    at processTicksAndRejections (native:7:39)",
}
[INFO] MCP-Server: Attempting reconnection in 100ms {
  attempt: 1,
  maxAttempts: 2,
}
[INFO] Connection: Connection disconnect {
  totalUptime: 1,
  graceful: true,
}
[INFO] Performance: disconnect completed in 0ms {
  operation: "disconnect",
  duration: 0,
  success: true,
  attempt: 1,
  component: "ConnectionManager",
}
(pass) Integration Tests > should handle connection loss and recovery [111.29ms]

tests/step3_ontology-engine.test.ts:
Added concept: Alpha (1)
(pass) Step 3: OntologyEngine > finds concept by representation [22.57ms]
Renamed concept: Alpha -> Beta
Evolved concept: Beta - rename
(pass) Step 3: OntologyEngine > renames concept through evolution [1.82ms]
Added concept: Gamma (2)
Added relation: Beta uses Gamma
(pass) Step 3: OntologyEngine > adds relations and retrieves related concepts [19.23ms]

tests/file-uri-resolution.test.ts:
Would save pipeline comprehensive_learning to database
Would save pipeline pattern_feedback_cycle to database
Would save pipeline daily_insights to database
Would setup cron job for pipeline daily_insights with schedule: 0 9 * * *
Would load additional pipelines from database
[INFO] Performance: tool_find_definition completed in 72ms {
  operation: "tool_find_definition",
  duration: 72,
  success: true,
  resultSize: 527,
}
[INFO] Performance: tool_find_definition completed in 73ms {
  operation: "tool_find_definition",
  duration: 73,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) File URI Resolution - Red Tests > MCP Adapter File Discovery > should discover actual file location when no file context provided [90.15ms]
[INFO] Performance: tool_find_definition completed in 3095ms {
  operation: "tool_find_definition",
  duration: 3095,
  success: true,
  resultSize: 268,
}
[INFO] Performance: tool_find_definition completed in 3097ms {
  operation: "tool_find_definition",
  duration: 3097,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) File URI Resolution - Red Tests > MCP Adapter File Discovery > should handle symbol not found gracefully [3096.68ms]
[INFO] Performance: tool_find_definition completed in 37ms {
  operation: "tool_find_definition",
  duration: 37,
  success: true,
  resultSize: 1108,
}
[INFO] Performance: tool_find_definition completed in 40ms {
  operation: "tool_find_definition",
  duration: 40,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) File URI Resolution - Red Tests > MCP Adapter File Discovery > should use provided file context when available [40.17ms]
Layer 1 failed: CoreError: Layer layer1 timed out after 1600ms
     layer: "layer1",
 requestId: "97483a80-8228-4a2c-8a18-33627ab92578",
   details: undefined,
      code: "LAYER_TIMEOUT"

      at new CoreError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:412:5)
      at new LayerTimeoutError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:419:5)
      at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/core/layer-manager.ts:312:18)

(pass) File URI Resolution - Red Tests > Core Analyzer URI Validation > should reject file://unknown URIs [1667.06ms]
Layer 1 failed: CoreError: Layer layer1 timed out after 1600ms
     layer: "layer1",
 requestId: "998dabb8-b214-457e-ab4c-055607622768",
   details: undefined,
      code: "LAYER_TIMEOUT"

      at new CoreError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:412:5)
      at new LayerTimeoutError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:419:5)
      at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/core/layer-manager.ts:312:18)

Layer 1 failed: CoreError: Layer layer1 timed out after 1600ms
     layer: "layer1",
 requestId: "344abf8a-b97a-4437-ae96-49659e7c261b",
   details: undefined,
      code: "LAYER_TIMEOUT"

      at new CoreError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:412:5)
      at new LayerTimeoutError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:419:5)
      at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/core/layer-manager.ts:312:18)

Layer 1 failed: CoreError: Layer layer1 timed out after 1600ms
     layer: "layer1",
 requestId: "643f1a72-83d1-4683-b9e9-408b6aa9bcab",
   details: undefined,
      code: "LAYER_TIMEOUT"

      at new CoreError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:412:5)
      at new LayerTimeoutError (/home/lightningralf/programming/ontology-lsp/src/core/types.ts:419:5)
      at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/core/layer-manager.ts:312:18)

(pass) File URI Resolution - Red Tests > Core Analyzer URI Validation > should validate URI format [4877.10ms]
(pass) File URI Resolution - Red Tests > Symbol Locator Integration > should locate symbols across workspace [68.63ms]
(pass) File URI Resolution - Red Tests > Symbol Locator Integration > should cache symbol locations for performance [13.00ms]
[INFO] Performance: tool_find_definition completed in 3099ms {
  operation: "tool_find_definition",
  duration: 3099,
  success: true,
  resultSize: 268,
}
[INFO] Performance: tool_find_definition completed in 3100ms {
  operation: "tool_find_definition",
  duration: 3100,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) File URI Resolution - Red Tests > Error Handling > should distinguish between "not found" and "location unknown" [3099.90ms]
[ERROR] MCP-Server: tool_find_definition failed {
  name: "Error",
  message: "Parameter 'symbol' cannot be empty",
  stack: "Error: Parameter 'symbol' cannot be empty\n    at new McpError (/home/lightningralf/programming/ontology-lsp/node_modules/@modelcontextprotocol/sdk/dist/types.js:991:9)\n    at createMcpError (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:226:26)\n    at validateArgs (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:646:15)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:196:10)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:195:38)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:163:33)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:83)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at handleToolCall (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:20)",
}
[WARN] MCP-Server: Not retrying due to error type {
  error: "Parameter 'symbol' cannot be empty",
  type: "McpError",
}
[ERROR] MCP-Server: tool_find_definition failed {
  name: "Error",
  message: "Parameter 'symbol' cannot be empty",
  stack: "Error: Parameter 'symbol' cannot be empty\n    at new McpError (/home/lightningralf/programming/ontology-lsp/node_modules/@modelcontextprotocol/sdk/dist/types.js:991:9)\n    at createMcpError (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:226:26)\n    at validateArgs (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:646:15)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:196:10)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:195:38)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:163:33)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:83)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at handleToolCall (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:20)",
}
(pass) File URI Resolution - Red Tests > Error Handling > should provide helpful error messages [9.41ms]

tests/adapters.test.ts:
Layer layer1 already registered, skipping...
Layer layer2 already registered, skipping...
Layer layer3 already registered, skipping...
Layer layer4 already registered, skipping...
Layer layer5 already registered, skipping...
Would save pipeline comprehensive_learning to database
Would save pipeline pattern_feedback_cycle to database
Would save pipeline daily_insights to database
Would setup cron job for pipeline daily_insights with schedule: 0 9 * * *
Would load additional pipelines from database
(pass) Protocol Adapters Integration > LSP Adapter > should convert LSP definition requests correctly [66.31ms]
(pass) Protocol Adapters Integration > LSP Adapter > should convert LSP references requests correctly [2.58ms]
Created new pattern candidate: symbol_at_10_5 -> RenamedFunction
FeedbackLoopSystem.generateInsights took 24ms (target: 20ms)
(pass) Protocol Adapters Integration > LSP Adapter > should handle LSP rename requests correctly [72.37ms]
(pass) Protocol Adapters Integration > LSP Adapter > should provide LSP completions correctly [87.18ms]
(pass) Protocol Adapters Integration > LSP Adapter > should maintain LSP protocol compliance [0.33ms]
[INFO] Performance: tool_find_definition completed in 59ms {
  operation: "tool_find_definition",
  duration: 59,
  success: true,
  resultSize: 610,
}
[INFO] Performance: tool_find_definition completed in 60ms {
  operation: "tool_find_definition",
  duration: 60,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) Protocol Adapters Integration > MCP Adapter > should handle find_definition tool correctly [65.16ms]
[INFO] Performance: tool_find_definition completed in 1ms {
  operation: "tool_find_definition",
  duration: 1,
  success: true,
  resultSize: 608,
}
[INFO] Performance: tool_find_definition completed in 1ms {
  operation: "tool_find_definition",
  duration: 1,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) Protocol Adapters Integration > MCP Adapter > should handle find_definition tool with advanced options [1.00ms]
[INFO] Performance: tool_find_references completed in 5ms {
  operation: "tool_find_references",
  duration: 5,
  success: true,
  resultSize: 543,
}
[INFO] Performance: tool_find_references completed in 6ms {
  operation: "tool_find_references",
  duration: 6,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) Protocol Adapters Integration > MCP Adapter > should handle find_references tool correctly [33.87ms]
Created new pattern candidate: TestFunction -> RenamedFunction
[INFO] Performance: tool_rename_symbol completed in 14ms {
  operation: "tool_rename_symbol",
  duration: 14,
  success: true,
  resultSize: 386,
}
[INFO] Performance: tool_rename_symbol completed in 17ms {
  operation: "tool_rename_symbol",
  duration: 17,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) Protocol Adapters Integration > MCP Adapter > should handle rename_symbol tool correctly [19.66ms]
[INFO] Performance: tool_generate_tests completed in 9ms {
  operation: "tool_generate_tests",
  duration: 9,
  success: true,
  resultSize: 329,
}
[INFO] Performance: tool_generate_tests completed in 12ms {
  operation: "tool_generate_tests",
  duration: 12,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) Protocol Adapters Integration > MCP Adapter > should handle generate_tests tool correctly [12.68ms]
(pass) Protocol Adapters Integration > MCP Adapter > should provide correct MCP tool list [0.40ms]
[INFO] Performance: tool_non_existent_tool completed in 0ms {
  operation: "tool_non_existent_tool",
  duration: 0,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
(pass) Protocol Adapters Integration > MCP Adapter > should handle invalid MCP tool requests gracefully [0.48ms]
[DEBUG] API path: /api/v1/definition Endpoint: /definition Method: POST
(pass) Protocol Adapters Integration > HTTP Adapter > should handle POST /api/definition requests correctly [10.75ms]
[DEBUG] API path: /api/v1/references Endpoint: /references Method: POST
(pass) Protocol Adapters Integration > HTTP Adapter > should handle GET /api/references requests correctly [1.52ms]
[DEBUG] API path: /api/v1/rename Endpoint: /rename Method: POST
(pass) Protocol Adapters Integration > HTTP Adapter > should handle POST /api/rename requests correctly [18.77ms]
[DEBUG] API path: /api/v1/completions Endpoint: /completions Method: POST
(pass) Protocol Adapters Integration > HTTP Adapter > should handle GET /api/completions requests correctly [33.64ms]
(pass) Protocol Adapters Integration > HTTP Adapter > should provide health check endpoint [0.76ms]
(pass) Protocol Adapters Integration > HTTP Adapter > should handle CORS requests correctly [19.57ms]
[DEBUG] API path: /api/v1/definition Endpoint: /definition Method: POST
(pass) Protocol Adapters Integration > HTTP Adapter > should handle HTTP errors gracefully [1.04ms]
(pass) Protocol Adapters Integration > CLI Adapter > should handle 'find' command correctly [1.84ms]
(pass) Protocol Adapters Integration > CLI Adapter > should handle 'references' command correctly [1.10ms]
Created new pattern candidate: TestFunction -> NewName
(pass) Protocol Adapters Integration > CLI Adapter > should handle 'rename' command correctly [23.18ms]
(pass) Protocol Adapters Integration > CLI Adapter > should handle 'stats' command correctly [12.16ms]
(pass) Protocol Adapters Integration > CLI Adapter > should handle invalid input gracefully [0.44ms]
[INFO] Performance: tool_find_definition completed in 4ms {
  operation: "tool_find_definition",
  duration: 4,
  success: true,
  resultSize: 608,
}
[INFO] Performance: tool_find_definition completed in 4ms {
  operation: "tool_find_definition",
  duration: 4,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
[DEBUG] API path: /api/v1/definition Endpoint: /definition Method: POST
(pass) Protocol Adapters Integration > Cross-Adapter Consistency > should return equivalent results across all adapters for definition [22.18ms]
[ERROR] MCP-Server: tool_find_definition failed {
  name: "Error",
  message: "Parameter 'symbol' cannot be empty",
  stack: "Error: Parameter 'symbol' cannot be empty\n    at new McpError (/home/lightningralf/programming/ontology-lsp/node_modules/@modelcontextprotocol/sdk/dist/types.js:991:9)\n    at createMcpError (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:226:26)\n    at validateArgs (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:646:15)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:196:10)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:195:38)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:163:33)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:83)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at handleToolCall (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:20)",
}
[WARN] MCP-Server: Not retrying due to error type {
  error: "Parameter 'symbol' cannot be empty",
  type: "McpError",
}
[ERROR] MCP-Server: tool_find_definition failed {
  name: "Error",
  message: "Parameter 'symbol' cannot be empty",
  stack: "Error: Parameter 'symbol' cannot be empty\n    at new McpError (/home/lightningralf/programming/ontology-lsp/node_modules/@modelcontextprotocol/sdk/dist/types.js:991:9)\n    at createMcpError (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:226:26)\n    at validateArgs (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:646:15)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:196:10)\n    at handleFindDefinition (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:195:38)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:163:33)\n    at <anonymous> (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:83)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:82:47)\n    at withErrorHandling (/home/lightningralf/programming/ontology-lsp/src/core/utils/error-handler.ts:54:5)\n    at handleToolCall (/home/lightningralf/programming/ontology-lsp/src/adapters/mcp-adapter.ts:147:20)",
}
(pass) Protocol Adapters Integration > Cross-Adapter Consistency > should handle errors consistently across adapters [71.68ms]
(pass) Protocol Adapters Integration > Backward Compatibility > should maintain compatibility with existing LSP clients [0.78ms]
(pass) Protocol Adapters Integration > Backward Compatibility > should maintain compatibility with existing MCP tools [0.48ms]
[DEBUG] API path: /api/v1/definition Endpoint: /definition Method: POST
[DEBUG] API path: /api/v1/references Endpoint: /references Method: POST
[DEBUG] API path: /api/v1/completions Endpoint: /completions Method: POST
(pass) Protocol Adapters Integration > Backward Compatibility > should maintain compatibility with existing HTTP API clients [2.11ms]
(pass) Protocol Adapters Integration > Backward Compatibility > should maintain compatibility with existing CLI usage [0.60ms]
LSP Definition: 1ms
[INFO] Performance: tool_find_definition completed in 0ms {
  operation: "tool_find_definition",
  duration: 0,
  success: true,
  resultSize: 608,
}
[INFO] Performance: tool_find_definition completed in 0ms {
  operation: "tool_find_definition",
  duration: 0,
  success: true,
  attempt: 1,
  component: "MCPAdapter",
}
MCP Find Definition: 0ms
HTTP Definition: 0ms
CLI Find: 0ms
(pass) Protocol Adapters Integration > Performance Across Adapters > should meet performance targets across all adapters [1.60ms]

tests/step4_pattern-learner.test.ts:
Created new pattern candidate: getUser -> fetchUser
Promoted candidate to pattern: 8c12d7a5-e2d7-42b4-b9ec-e826f703f64e (confidence: 0.92)
(pass) Step 4: PatternLearner > promotes candidate to pattern after threshold [2.60ms]
Created new pattern candidate: getItem -> fetchItem
(pass) Step 4: PatternLearner > strengthens existing pattern on further examples [0.41ms]

tests/learning-system.test.ts:
Would save pipeline comprehensive_learning to database
Would save pipeline pattern_feedback_cycle to database
Would save pipeline daily_insights to database
Would setup cron job for pipeline daily_insights with schedule: 0 9 * * *
Would load additional pipelines from database
(pass) Learning System Integration > Learning Orchestrator > should initialize all learning components successfully [12.70ms]
CodeEvolutionTracker.detectEvolutionPatterns took 31ms (target: 20ms)
274 |       const startTime = Date.now();
275 |       const result = await context.learningOrchestrator.learn(learningContext, learningData);
276 |       const duration = Date.now() - startTime;
277 | 
278 |       // Should meet performance target (<50ms for learning operations)
279 |       expect(duration).toBeLessThan(50);
                             ^
error: expect(received).toBeLessThan(expected)

Expected: < 50
Received: 60

      at <anonymous> (/home/lightningralf/programming/ontology-lsp/tests/learning-system.test.ts:279:24)
(fail) Learning System Integration > Learning Orchestrator > should orchestrate comprehensive learning from diverse input [66.53ms]
Ran 70 tests across 8 files. [21.50s]
Bailed out after 1 failure
