#!/bin/bash

# Start all Ontology LSP servers

echo "üöÄ Starting Ontology LSP Servers..."
echo "=================================="

# Kill any existing servers on our ports
echo "üìå Cleaning up old processes..."
lsof -ti:7000 | xargs -r kill -9 2>/dev/null
lsof -ti:7001 | xargs -r kill -9 2>/dev/null
lsof -ti:7002 | xargs -r kill -9 2>/dev/null

# Set environment
export ONTOLOGY_WORKSPACE="$(pwd)"
export BUN_PATH="${HOME}/.bun/bin/bun"

# Check Bun installation
if [ ! -f "$BUN_PATH" ]; then
    echo "‚ùå Bun not found at $BUN_PATH"
    echo "Please install Bun: curl -fsSL https://bun.sh/install | bash"
    exit 1
fi

echo "‚úÖ Using Bun at: $BUN_PATH"
echo "‚úÖ Bun version: $($BUN_PATH --version)"
echo ""

# Start HTTP API Server
echo "üåê Starting HTTP API Server on port 7000..."
$BUN_PATH run src/api/http-server.ts &
HTTP_PID=$!
echo "   PID: $HTTP_PID"

# Start MCP SSE Server
echo "üîå Starting MCP SSE Server on port 7001..."
$BUN_PATH run mcp-ontology-server/index.ts &
MCP_PID=$!
echo "   PID: $MCP_PID"

# Wait for servers to initialize
echo ""
echo "‚è≥ Waiting for servers to initialize..."
sleep 3

# Test servers
echo ""
echo "üß™ Testing server health..."

# Test HTTP API
HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:7000/health)
if [ "$HTTP_STATUS" = "200" ]; then
    echo "‚úÖ HTTP API Server: HEALTHY (port 7000)"
else
    echo "‚ùå HTTP API Server: FAILED (status: $HTTP_STATUS)"
fi

# Test MCP SSE
MCP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:7001/health)
if [ "$MCP_STATUS" = "200" ]; then
    echo "‚úÖ MCP SSE Server: HEALTHY (port 7001)"
else
    echo "‚ùå MCP SSE Server: FAILED (status: $MCP_STATUS)"
fi

echo ""
echo "=================================="
echo "üéâ Servers are running!"
echo ""
echo "üìç HTTP API: http://localhost:7000"
echo "   - Health: http://localhost:7000/health"
echo "   - Stats:  http://localhost:7000/stats"
echo ""
echo "üìç MCP SSE:  http://localhost:7001"
echo "   - Health: http://localhost:7001/health"
echo ""
echo "üìç Process IDs:"
echo "   - HTTP API: $HTTP_PID"
echo "   - MCP SSE:  $MCP_PID"
echo ""
echo "Press Ctrl+C to stop all servers..."
echo "=================================="

# Handle shutdown
shutdown() {
    echo ""
    echo "üõë Stopping all servers..."
    kill $HTTP_PID 2>/dev/null
    kill $MCP_PID 2>/dev/null
    echo "‚úÖ All servers stopped"
    exit 0
}

trap shutdown INT TERM

# Keep running
while true; do
    sleep 1
    # Check if processes are still running
    if ! kill -0 $HTTP_PID 2>/dev/null; then
        echo "‚ö†Ô∏è HTTP API Server stopped unexpectedly"
        shutdown
    fi
    if ! kill -0 $MCP_PID 2>/dev/null; then
        echo "‚ö†Ô∏è MCP SSE Server stopped unexpectedly"
        shutdown
    fi
done